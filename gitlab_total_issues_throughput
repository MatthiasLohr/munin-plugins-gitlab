#!/usr/bin/env python

from lib import get_gitlab_instance
import sys


if len(sys.argv) >= 2 and sys.argv[1] == 'config':
    print('graph_title GitLab issue throughput')
    print('graph_vlabel issues / s')
    print('graph_args -l 0')
    print('graph_category gitlab')
    print('count_opened.label opened issues')
    print('count_opened.type DERIVE')
    print('count_opened.draw AREA')
    print('count_opened.colour 00FF00')
    print('count_closed.label closed issues')
    print('count_closed.type DERIVE')
    print('count_closed.draw STACK')
    print('count_closed.colour FF0000')
#    print('count_deleted.label deleted issues')
#    print('count_deleted.type DERIVE')
#    print('count_deleted.draw STACK')
#    print('count_deleted.colour 000000')
    sys.exit(0)

gitlab = get_gitlab_instance()
db = gitlab.get_db_connection()

cursor = db.cursor()
cursor.execute("SELECT COUNT(*) FROM issues")
count_opened = cursor.fetchone()[0]
cursor.close()

cursor = db.cursor()
cursor.execute("SELECT COUNT(*) FROM issues WHERE state = 'closed'")
count_closed = cursor.fetchone()[0]
cursor.close

#cursor = db.cursor()
#cursor.execute("SELECT COUNT(*) FROM issues WHERE deleted_at IS NOT NULL")
#count_deleted = cursor.fetchone()[0]
#cursor.close

db.close()

print('count_opened.value ' + str(count_opened))
print('count_closed.value ' + str(count_closed))
#print('count_deleted.value ' + str(count_deleted))

